===========================
How to Use 2-matrix_divided.py
===========================

This module contains a single function that defines a matrix division function ``matrix_divided(matrix, div)``.

``matrix_divided(matrix, div)``` returns the division of a matrix by the divisor.


::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [
	...		[1, 2, 3],
	...		[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


matrix cannot be empty
::
	>>> matrix = []
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats


matrix cannot be contain a non list data type
::
	>>> matrix_divided(5, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::	
	>>> matrix_divided("Hello", 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::
	>>> matrix_divided((7, 5), 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::
	>>> matrix_divided(4.6, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix rows cannot be empty
::
	>>> matrix = [
	...		[],
	...		[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix rows must be of equal length

::
	>>> matrix = [
	...		[5, 6],
	...		[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

matrix rows must contain only list of integers/floats

::
	>>> matrix = [
	...		"strings",
	...		[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::
	>>> matrix = [
	...		60,
	...		[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix rows can only be lists
::
	>>> matrix = [
	...		50.2,
	...		[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix rows can only contain integers or floats
::
	>>> matrix = [
	...		[3, "hello"],
	...		[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

div must be a number
::
	>>> matrix = [
	...		[1, 2, 3],
	...		[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, "hello")
	Traceback (most recent call last):
	TypeError: div must be a number

::
	>>> matrix = [
	...		[1, 2, 3],
	...		[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, None)
	Traceback (most recent call last):
	TypeError: div must be a number

div cannot be a Nan or inf
::
	>>> matrix = [
	...		[1, 2, 3],
	...		[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, float('nan'))
	Traceback (most recent call last):
	TypeError: div must be a number

::
	>>> matrix = [
	...		[1, 2, 3],
	...		[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, float('inf'))
	Traceback (most recent call last):
	TypeError: div must be a number

div cannot be Zero: it will raise ZeroDivisionError
::
	>>> matrix = [
	...		[1, 2, 3],
	...		[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero